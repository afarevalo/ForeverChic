source("0. Nomina/Codigo por Partes/2. Nombre del Archivo Base.R")
source("0. Nomina/Codigo por Partes/3. Agregar y Eliminar la Base.R")
source("0. Nomina/Codigo por Partes/4. Clasificacion Tipo de Servicio.R")
source("0. Nomina/Codigo por Partes/5. Manejo Partícipes.R")
source("0. Nomina/Codigo por Partes/6. Costos de transacción.R")
source("0. Nomina/Codigo por Partes/7. Participación Producto.R")
source("0. Nomina/Codigo por Partes/8. Generar la Base de Color.R")
source("0. Nomina/Codigo por Partes/9. Completar Base con Color.R")
source("0. Nomina/Codigo por Partes/10. Porcentaje de los Profesionales.R")
source("0. Nomina/Codigo por Partes/11. Participación Salón.R")
source("0. Nomina/Codigo por Partes/12. Generar la Base de Descuentos.R")
Data$Modificado <- ifelse(is.na(Data$Modificado), 0, Data$Modificado)
# Lo que Nydia le hace a los profesionales
companeros <- read_excel("0. Nomina/Info.xlsx", sheet = "13. Companeros N")
companeros <- as.vector(companeros[[1]])
companeros
# Filtrar las filas que cumplen la condición
filas_a_duplicar <- Data[Data$`Servicio/Producto` %in% companeros, ]
filas_a_duplicar$Precio <- ifelse(filas_a_duplicar$Precio == 0,
filas_a_duplicar$`Precio de Lista`, filas_a_duplicar$Precio)
# Modificar la columna "Modificado" en las filas duplicadas
filas_a_duplicar$Modificado <- 1
# Combinar las filas originales con las duplicadas
Data <- rbind(Data, filas_a_duplicar)
rm(filas_a_duplicar)
# Condicional para que el Cliente se vuelva profesional
Data$`Prestador/Vendedor` <- ifelse(Data$`Nombre cliente` %in% Base_Profesionales & Data$Precio == 0,
Data$`Nombre cliente`,Data$`Prestador/Vendedor`)
Data$`Prestador/Vendedor` <- ifelse(Data$`Nombre cliente` %in% Base_Profesionales & Data$Modificado == 1,
Data$`Nombre cliente`,Data$`Prestador/Vendedor`)
Data$`Prestador/Vendedor` <- ifelse(Data$`Nombre cliente` %in% Base_Profesionales & is.na(Data$Modificado) &
Data$`Servicio/Producto` %in% companeros,
"Nydia Gamba",Data$`Prestador/Vendedor`)
Data$`Prestador/Vendedor` <- ifelse(Data$Tipo == "Accesorios",
"Accesorios", Data$`Prestador/Vendedor`)
Data$`Prestador/Vendedor` <- ifelse(Data$Tipo == "Maquillaje",
"Lina", Data$`Prestador/Vendedor`)
Data$Modificado <- ifelse(is.na(Data$Modificado), 0, Data$Modificado)
# Condicional para que el precio pase de ser 0 al Precio de Lista
Data$Precio <- ifelse(Data$`Nombre cliente` %in% Base_Profesionales & Data$Precio == 0,
Data$`Precio de Lista`,Data$Precio)
# Condicional para cambiar el nombre del cliente por la descripción del descuento
Data$`Nombre cliente` <- ifelse(Data$`Nombre cliente` %in% Base_Profesionales &
Data$Precio == Data$`Precio de Lista` &
!(Data$`Servicio/Producto` %in% companeros),
"Ajuste de Producto" ,Data$`Nombre cliente`)
Data$`Nombre cliente` <- ifelse(Data$`Nombre cliente` %in% Base_Profesionales &
Data$`Servicio/Producto` %in% companeros &
Data$Modificado == 1,
"Ajuste de Producto" ,Data$`Nombre cliente`)
# Descuentos por Area
Des_Alianza <- 1
Des_Spa <- 0.26
Des_Bac <- 0.25
Des_Tocador <- 0
Des_Depilacion <- 0.15
Des_Venta <- 0.08
Des_Color <- 0
Des_TermoCut <- 0.10
#Ajuste por servicios tico Companeros
Data$Part_profesional <- ifelse(Data$Modificado == 0 & Data$Tipo == "Alianza" &
Data$`Nombre cliente` == Data$`Prestador/Vendedor`,
-Data$Precio * Des_Alianza, Data$Part_profesional)
Data$`Prestador/Vendedor` <- ifelse(Data$Modificado == 0 & Data$Tipo == "Alianza" &
Data$`Nombre cliente` == Data$`Prestador/Vendedor`, "Nydia Gamba", Data$`Prestador/Vendedor`)
#Parte del profesional por servicios de compañeros
Data$Part_profesional <- ifelse(Data$`Nombre cliente` == "Ajuste de Producto",
ifelse(Data$Tipo == "Alianza", -Data$Precio * Des_Alianza,
ifelse(Data$Tipo == "Spa", -Data$Precio * Des_Spa,
ifelse(Data$Tipo == "Bac", -Data$Precio * Des_Bac,
ifelse(Data$Tipo == "Tocador", -Producto_tocador,
ifelse(Data$Tipo == "Depilacion", -Data$Precio * Des_Depilacion,
ifelse(Data$Tipo == "Venta", -Data$Precio * Des_Venta,
ifelse(Data$Tipo == "Colorimetria", -Data$Precio - Data$pct_prod,
ifelse(Data$Tipo == "Queratina", -Data$Precio - Data$pct_prod,
ifelse(Data$Tipo == "TermoCut", -Data$Precio * Des_TermoCut,
Data$Part_profesional))))))))),
Data$Part_profesional)
Data$Part_salon <- ifelse(Data$`Prestador/Vendedor` %in% Base_Profesionales & Data$Modificado == 1 &
Data$`Servicio/Producto` %in% companeros, 0, Data$Part_salon)
#===============================================================================
# Limpiar el entorno
rm(list = ls())
#===============================================================================
source("0. Nomina/Codigo por Partes/1. Cargar la Base.R")
source("0. Nomina/Codigo por Partes/2. Nombre del Archivo Base.R")
source("0. Nomina/Codigo por Partes/3. Agregar y Eliminar la Base.R")
source("0. Nomina/Codigo por Partes/4. Clasificacion Tipo de Servicio.R")
source("0. Nomina/Codigo por Partes/5. Manejo Partícipes.R")
source("0. Nomina/Codigo por Partes/6. Costos de transacción.R")
source("0. Nomina/Codigo por Partes/7. Participación Producto.R")
source("0. Nomina/Codigo por Partes/8. Generar la Base de Color.R")
source("0. Nomina/Codigo por Partes/9. Completar Base con Color.R")
source("0. Nomina/Codigo por Partes/10. Porcentaje de los Profesionales.R")
source("0. Nomina/Codigo por Partes/11. Participación Salón.R")
source("0. Nomina/Codigo por Partes/12. Generar la Base de Descuentos.R")
source("0. Nomina/Codigo por Partes/13. Descuento Ajuste Producto.R")
source("0. Nomina/Codigo por Partes/14. Descuentos Varios a Profesionales.R")
source("0. Nomina/Codigo por Partes/15. Exportar Resultados.R")
#===============================================================================
# Reporte Final
#===============================================================================
rm(yellow_row_style)
# Data
Data$Precio <- ifelse(Data$Modificado == 1, 0,Data$Precio)
Data <- Data %>% select(-Modificado)
# Exportar Data del Consolidado
write_xlsx(Data, file.path("3. Resultados", nombre_carpeta, "0. Consolidado.xlsx"))
# Crear el reporte agrupando por trabajador y sumando la variable "Part_profesional"
reporte <- Data %>%
group_by(`Prestador/Vendedor`) %>%
summarise(Total_a_pagar = sum(Part_profesional, na.rm = TRUE)) %>%
arrange(desc(Total_a_pagar)) # Ordenar por el total a pagar de mayor a menor
# Calcula el total de la nomina
total_nomina <- sum(Data$Part_profesional, na.rm = TRUE)
# Imprimir el reporte en la consola
cat("Reporte de Nómina\n")
cat("=================\n")
for (i in 1:nrow(reporte)) {
cat(
paste0(
"- ", reporte$`Prestador/Vendedor`[i],
": Se le debe pagar ",
formatC(reporte$Total_a_pagar[i], format = "f", big.mark = ",", digits = 2), "\n"
)
)
}
cat("=================\n")
cat(paste0("En total de nómina se deben pagar: ",
formatC(total_nomina, format = "f", big.mark = ",", digits = 2), "\n"))
#===============================================================================
# Limpiar el entorno
rm(list = ls())
#===============================================================================
source("0. Nomina/Codigo por Partes/1. Cargar la Base.R")
source("0. Nomina/Codigo por Partes/2. Nombre del Archivo Base.R")
source("0. Nomina/Codigo por Partes/3. Agregar y Eliminar la Base.R")
source("0. Nomina/Codigo por Partes/4. Clasificacion Tipo de Servicio.R")
source("0. Nomina/Codigo por Partes/5. Manejo Partícipes.R")
source("0. Nomina/Codigo por Partes/6. Costos de transacción.R")
source("0. Nomina/Codigo por Partes/7. Participación Producto.R")
source("0. Nomina/Codigo por Partes/8. Generar la Base de Color.R")
source("0. Nomina/Codigo por Partes/9. Completar Base con Color.R")
source("0. Nomina/Codigo por Partes/10. Porcentaje de los Profesionales.R")
source("0. Nomina/Codigo por Partes/11. Participación Salón.R")
source("0. Nomina/Codigo por Partes/12. Generar la Base de Descuentos.R")
source("0. Nomina/Codigo por Partes/13. Descuento Ajuste Producto.R")
source("0. Nomina/Codigo por Partes/14. Descuentos Varios a Profesionales.R")
source("0. Nomina/Codigo por Partes/15. Exportar Resultados.R")
#===============================================================================
# Reporte Final
#===============================================================================
rm(yellow_row_style)
# Data
Data$Precio <- ifelse(Data$Modificado == 1, 0,Data$Precio)
Data <- Data %>% select(-Modificado)
# Exportar Data del Consolidado
write_xlsx(Data, file.path("3. Resultados", nombre_carpeta, "0. Consolidado.xlsx"))
# Crear el reporte agrupando por trabajador y sumando la variable "Part_profesional"
reporte <- Data %>%
group_by(`Prestador/Vendedor`) %>%
summarise(Total_a_pagar = sum(Part_profesional, na.rm = TRUE)) %>%
arrange(desc(Total_a_pagar)) # Ordenar por el total a pagar de mayor a menor
# Calcula el total de la nomina
total_nomina <- sum(Data$Part_profesional, na.rm = TRUE)
# Imprimir el reporte en la consola
cat("Reporte de Nómina\n")
cat("=================\n")
for (i in 1:nrow(reporte)) {
cat(
paste0(
"- ", reporte$`Prestador/Vendedor`[i],
": Se le debe pagar ",
formatC(reporte$Total_a_pagar[i], format = "f", big.mark = ",", digits = 2), "\n"
)
)
}
cat("=================\n")
cat(paste0("En total de nómina se deben pagar: ",
formatC(total_nomina, format = "f", big.mark = ",", digits = 2), "\n"))
#===============================================================================
# Limpiar el entorno
rm(list = ls())
#===============================================================================
source("0. Nomina/Codigo por Partes/1. Cargar la Base.R")
source("0. Nomina/Codigo por Partes/2. Nombre del Archivo Base.R")
source("0. Nomina/Codigo por Partes/3. Agregar y Eliminar la Base.R")
source("0. Nomina/Codigo por Partes/4. Clasificacion Tipo de Servicio.R")
source("0. Nomina/Codigo por Partes/5. Manejo Partícipes.R")
source("0. Nomina/Codigo por Partes/6. Costos de transacción.R")
source("0. Nomina/Codigo por Partes/7. Participación Producto.R")
source("0. Nomina/Codigo por Partes/8. Generar la Base de Color.R")
source("0. Nomina/Codigo por Partes/9. Completar Base con Color.R")
source("0. Nomina/Codigo por Partes/10. Porcentaje de los Profesionales.R")
source("0. Nomina/Codigo por Partes/11. Participación Salón.R")
source("0. Nomina/Codigo por Partes/12. Generar la Base de Descuentos.R")
source("0. Nomina/Codigo por Partes/13. Descuento Ajuste Producto.R")
source("0. Nomina/Codigo por Partes/14. Descuentos Varios a Profesionales.R")
source("0. Nomina/Codigo por Partes/15. Exportar Resultados.R")
#===============================================================================
# Reporte Final
#===============================================================================
rm(yellow_row_style)
# Data
Data$Precio <- ifelse(Data$Modificado == 1, 0,Data$Precio)
Data <- Data %>% select(-Modificado)
# Exportar Data del Consolidado
write_xlsx(Data, file.path("3. Resultados", nombre_carpeta, "0. Consolidado.xlsx"))
# Crear el reporte agrupando por trabajador y sumando la variable "Part_profesional"
reporte <- Data %>%
group_by(`Prestador/Vendedor`) %>%
summarise(Total_a_pagar = sum(Part_profesional, na.rm = TRUE)) %>%
arrange(desc(Total_a_pagar)) # Ordenar por el total a pagar de mayor a menor
# Calcula el total de la nomina
total_nomina <- sum(Data$Part_profesional, na.rm = TRUE)
# Imprimir el reporte en la consola
cat("Reporte de Nómina\n")
cat("=================\n")
for (i in 1:nrow(reporte)) {
cat(
paste0(
"- ", reporte$`Prestador/Vendedor`[i],
": Se le debe pagar ",
formatC(reporte$Total_a_pagar[i], format = "f", big.mark = ",", digits = 2), "\n"
)
)
}
cat("=================\n")
cat(paste0("En total de nómina se deben pagar: ",
formatC(total_nomina, format = "f", big.mark = ",", digits = 2), "\n"))
#===============================================================================
# Limpiar el entorno
rm(list = ls())
#===============================================================================
source("0. Nomina/Codigo por Partes/1. Cargar la Base.R")
source("0. Nomina/Codigo por Partes/2. Nombre del Archivo Base.R")
source("0. Nomina/Codigo por Partes/3. Agregar y Eliminar la Base.R")
source("0. Nomina/Codigo por Partes/4. Clasificacion Tipo de Servicio.R")
source("0. Nomina/Codigo por Partes/5. Manejo Partícipes.R")
source("0. Nomina/Codigo por Partes/6. Costos de transacción.R")
source("0. Nomina/Codigo por Partes/7. Participación Producto.R")
source("0. Nomina/Codigo por Partes/8. Generar la Base de Color.R")
source("0. Nomina/Codigo por Partes/9. Completar Base con Color.R")
source("0. Nomina/Codigo por Partes/10. Porcentaje de los Profesionales.R")
source("0. Nomina/Codigo por Partes/11. Participación Salón.R")
source("0. Nomina/Codigo por Partes/12. Generar la Base de Descuentos.R")
source("0. Nomina/Codigo por Partes/13. Descuento Ajuste Producto.R")
source("0. Nomina/Codigo por Partes/14. Descuentos Varios a Profesionales.R")
source("0. Nomina/Codigo por Partes/15. Exportar Resultados.R")
#===============================================================================
# Reporte Final
#===============================================================================
rm(yellow_row_style)
# Data
Data$Precio <- ifelse(Data$Modificado == 1, 0,Data$Precio)
Data <- Data %>% select(-Modificado)
# Exportar Data del Consolidado
write_xlsx(Data, file.path("3. Resultados", nombre_carpeta, "0. Consolidado.xlsx"))
# Crear el reporte agrupando por trabajador y sumando la variable "Part_profesional"
reporte <- Data %>%
group_by(`Prestador/Vendedor`) %>%
summarise(Total_a_pagar = sum(Part_profesional, na.rm = TRUE)) %>%
arrange(desc(Total_a_pagar)) # Ordenar por el total a pagar de mayor a menor
# Calcula el total de la nomina
total_nomina <- sum(Data$Part_profesional, na.rm = TRUE)
# Imprimir el reporte en la consola
cat("Reporte de Nómina\n")
cat("=================\n")
for (i in 1:nrow(reporte)) {
cat(
paste0(
"- ", reporte$`Prestador/Vendedor`[i],
": Se le debe pagar ",
formatC(reporte$Total_a_pagar[i], format = "f", big.mark = ",", digits = 2), "\n"
)
)
}
cat("=================\n")
cat(paste0("En total de nómina se deben pagar: ",
formatC(total_nomina, format = "f", big.mark = ",", digits = 2), "\n"))
Parte_Alianza
#===============================================================================
# Limpiar el entorno
rm(list = ls())
#===============================================================================
source("0. Nomina/Codigo por Partes/1. Cargar la Base.R")
source("0. Nomina/Codigo por Partes/2. Nombre del Archivo Base.R")
source("0. Nomina/Codigo por Partes/3. Agregar y Eliminar la Base.R")
source("0. Nomina/Codigo por Partes/4. Clasificacion Tipo de Servicio.R")
source("0. Nomina/Codigo por Partes/5. Manejo Partícipes.R")
source("0. Nomina/Codigo por Partes/6. Costos de transacción.R")
source("0. Nomina/Codigo por Partes/7. Participación Producto.R")
source("0. Nomina/Codigo por Partes/8. Generar la Base de Color.R")
source("0. Nomina/Codigo por Partes/9. Completar Base con Color.R")
source("0. Nomina/Codigo por Partes/10. Porcentaje de los Profesionales.R")
source("0. Nomina/Codigo por Partes/11. Participación Salón.R")
source("0. Nomina/Codigo por Partes/12. Generar la Base de Descuentos.R")
Data$Modificado <- ifelse(is.na(Data$Modificado), 0, Data$Modificado)
# Lo que Nydia le hace a los profesionales
companeros <- read_excel("0. Nomina/Info.xlsx", sheet = "13. Companeros N")
companeros <- as.vector(companeros[[1]])
companeros
# Filtrar las filas que cumplen la condición
filas_a_duplicar <- Data[Data$`Servicio/Producto` %in% companeros, ]
filas_a_duplicar$Precio <- ifelse(filas_a_duplicar$Precio == 0,
filas_a_duplicar$`Precio de Lista`, filas_a_duplicar$Precio)
# Modificar la columna "Modificado" en las filas duplicadas
filas_a_duplicar$Modificado <- 1
# Combinar las filas originales con las duplicadas
Data <- rbind(Data, filas_a_duplicar)
rm(filas_a_duplicar)
# Condicional para que el Cliente se vuelva profesional
Data$`Prestador/Vendedor` <- ifelse(Data$`Nombre cliente` %in% Base_Profesionales & Data$Precio == 0,
Data$`Nombre cliente`,Data$`Prestador/Vendedor`)
Data$`Prestador/Vendedor` <- ifelse(Data$`Nombre cliente` %in% Base_Profesionales & Data$Modificado == 1,
Data$`Nombre cliente`,Data$`Prestador/Vendedor`)
Data$`Prestador/Vendedor` <- ifelse(Data$`Nombre cliente` %in% Base_Profesionales & is.na(Data$Modificado) &
Data$`Servicio/Producto` %in% companeros,
"Nydia Gamba",Data$`Prestador/Vendedor`)
Data$`Prestador/Vendedor` <- ifelse(Data$Tipo == "Accesorios",
"Accesorios", Data$`Prestador/Vendedor`)
Data$`Prestador/Vendedor` <- ifelse(Data$Tipo == "Maquillaje",
"Lina", Data$`Prestador/Vendedor`)
Data$Modificado <- ifelse(is.na(Data$Modificado), 0, Data$Modificado)
# Condicional para que el precio pase de ser 0 al Precio de Lista
Data$Precio <- ifelse(Data$`Nombre cliente` %in% Base_Profesionales & Data$Precio == 0,
Data$`Precio de Lista`,Data$Precio)
# Condicional para cambiar el nombre del cliente por la descripción del descuento
Data$`Nombre cliente` <- ifelse(Data$`Nombre cliente` %in% Base_Profesionales &
Data$Precio == Data$`Precio de Lista` &
!(Data$`Servicio/Producto` %in% companeros),
"Ajuste de Producto" ,Data$`Nombre cliente`)
Data$`Nombre cliente` <- ifelse(Data$`Nombre cliente` %in% Base_Profesionales &
Data$`Servicio/Producto` %in% companeros &
Data$Modificado == 1,
"Ajuste de Producto" ,Data$`Nombre cliente`)
# Descuentos por Area
Des_Alianza <- 1
Des_Spa <- 0.26
Des_Bac <- 0.25
Des_Tocador <- 0
Des_Depilacion <- 0.15
Des_Venta <- 0.08
Des_Color <- 0
Des_TermoCut <- 0.10
#Ajuste por servicios tico Companeros
Data$Part_profesional <- ifelse(Data$Modificado == 0 & Data$Tipo == "Alianza" &
Data$`Nombre cliente` == Data$`Prestador/Vendedor`,
Data$Precio * Parte_Alianza, Data$Part_profesional)
Data$`Prestador/Vendedor` <- ifelse(Data$Modificado == 0 & Data$Tipo == "Alianza" &
Data$`Nombre cliente` == Data$`Prestador/Vendedor`, "Nydia Gamba", Data$`Prestador/Vendedor`)
View(Data)
#Parte del profesional por servicios de compañeros
Data$Part_profesional <- ifelse(Data$`Nombre cliente` == "Ajuste de Producto",
ifelse(Data$Tipo == "Alianza", -Data$Precio * Des_Alianza,
ifelse(Data$Tipo == "Spa", -Data$Precio * Des_Spa,
ifelse(Data$Tipo == "Bac", -Data$Precio * Des_Bac,
ifelse(Data$Tipo == "Tocador", -Producto_tocador,
ifelse(Data$Tipo == "Depilacion", -Data$Precio * Des_Depilacion,
ifelse(Data$Tipo == "Venta", -Data$Precio * Des_Venta,
ifelse(Data$Tipo == "Colorimetria", -Data$Precio - Data$pct_prod,
ifelse(Data$Tipo == "Queratina", -Data$Precio - Data$pct_prod,
ifelse(Data$Tipo == "TermoCut", -Data$Precio * Des_TermoCut,
Data$Part_profesional))))))))),
Data$Part_profesional)
Data$Part_salon <- ifelse(Data$`Prestador/Vendedor` %in% Base_Profesionales & Data$Modificado == 1 &
Data$`Servicio/Producto` %in% companeros, 0, Data$Part_salon)
#===============================================================================
# Limpiar el entorno
rm(list = ls())
#===============================================================================
source("0. Nomina/Codigo por Partes/1. Cargar la Base.R")
source("0. Nomina/Codigo por Partes/2. Nombre del Archivo Base.R")
source("0. Nomina/Codigo por Partes/3. Agregar y Eliminar la Base.R")
source("0. Nomina/Codigo por Partes/4. Clasificacion Tipo de Servicio.R")
source("0. Nomina/Codigo por Partes/5. Manejo Partícipes.R")
source("0. Nomina/Codigo por Partes/6. Costos de transacción.R")
source("0. Nomina/Codigo por Partes/7. Participación Producto.R")
source("0. Nomina/Codigo por Partes/8. Generar la Base de Color.R")
source("0. Nomina/Codigo por Partes/9. Completar Base con Color.R")
source("0. Nomina/Codigo por Partes/10. Porcentaje de los Profesionales.R")
source("0. Nomina/Codigo por Partes/11. Participación Salón.R")
source("0. Nomina/Codigo por Partes/12. Generar la Base de Descuentos.R")
source("0. Nomina/Codigo por Partes/13. Descuento Ajuste Producto.R")
source("0. Nomina/Codigo por Partes/14. Descuentos Varios a Profesionales.R")
source("0. Nomina/Codigo por Partes/15. Exportar Resultados.R")
#===============================================================================
# Reporte Final
#===============================================================================
rm(yellow_row_style)
# Data
Data$Precio <- ifelse(Data$Modificado == 1, 0,Data$Precio)
Data <- Data %>% select(-Modificado)
# Exportar Data del Consolidado
write_xlsx(Data, file.path("3. Resultados", nombre_carpeta, "0. Consolidado.xlsx"))
# Crear el reporte agrupando por trabajador y sumando la variable "Part_profesional"
reporte <- Data %>%
group_by(`Prestador/Vendedor`) %>%
summarise(Total_a_pagar = sum(Part_profesional, na.rm = TRUE)) %>%
arrange(desc(Total_a_pagar)) # Ordenar por el total a pagar de mayor a menor
# Calcula el total de la nomina
total_nomina <- sum(Data$Part_profesional, na.rm = TRUE)
# Imprimir el reporte en la consola
cat("Reporte de Nómina\n")
cat("=================\n")
for (i in 1:nrow(reporte)) {
cat(
paste0(
"- ", reporte$`Prestador/Vendedor`[i],
": Se le debe pagar ",
formatC(reporte$Total_a_pagar[i], format = "f", big.mark = ",", digits = 2), "\n"
)
)
}
cat("=================\n")
cat(paste0("En total de nómina se deben pagar: ",
formatC(total_nomina, format = "f", big.mark = ",", digits = 2), "\n"))
#===============================================================================
# Limpiar el entorno
rm(list = ls())
#===============================================================================
source("0. Nomina/Codigo por Partes/1. Cargar la Base.R")
source("0. Nomina/Codigo por Partes/2. Nombre del Archivo Base.R")
source("0. Nomina/Codigo por Partes/3. Agregar y Eliminar la Base.R")
source("0. Nomina/Codigo por Partes/4. Clasificacion Tipo de Servicio.R")
source("0. Nomina/Codigo por Partes/5. Manejo Partícipes.R")
source("0. Nomina/Codigo por Partes/6. Costos de transacción.R")
source("0. Nomina/Codigo por Partes/7. Participación Producto.R")
source("0. Nomina/Codigo por Partes/8. Generar la Base de Color.R")
source("0. Nomina/Codigo por Partes/9. Completar Base con Color.R")
source("0. Nomina/Codigo por Partes/10. Porcentaje de los Profesionales.R")
source("0. Nomina/Codigo por Partes/11. Participación Salón.R")
source("0. Nomina/Codigo por Partes/12. Generar la Base de Descuentos.R")
source("0. Nomina/Codigo por Partes/13. Descuento Ajuste Producto.R")
View(Data)
source("0. Nomina/Codigo por Partes/14. Descuentos Varios a Profesionales.R")
View(Data)
ultimo_descuento
# Exportar Excel de la ruta previamente establecida
ultimo_descuento <- archivos_descuento[length(archivos_descuento)]
ultimo_descuento
archivos_descuento
# Exportar Excel de la ruta previamente establecida
archivos_descuento <- list.files(ruta_descuento)
ultimo_descuento <- archivos_descuento[length(archivos_descuento)]
ultimo_descuento
#===============================================================================
# Limpiar el entorno
rm(list = ls())
#===============================================================================
source("0. Nomina/Codigo por Partes/1. Cargar la Base.R")
source("0. Nomina/Codigo por Partes/2. Nombre del Archivo Base.R")
source("0. Nomina/Codigo por Partes/3. Agregar y Eliminar la Base.R")
source("0. Nomina/Codigo por Partes/4. Clasificacion Tipo de Servicio.R")
source("0. Nomina/Codigo por Partes/5. Manejo Partícipes.R")
source("0. Nomina/Codigo por Partes/6. Costos de transacción.R")
source("0. Nomina/Codigo por Partes/7. Participación Producto.R")
source("0. Nomina/Codigo por Partes/8. Generar la Base de Color.R")
source("0. Nomina/Codigo por Partes/9. Completar Base con Color.R")
View(Data_Color_unique)
# Ruta del archivo color
archivos_color <- list.files(ruta_color)
ultimo_color <- archivos_color[length(archivos_color)]
ultimo_color
#===============================================================================
# Limpiar el entorno
rm(list = ls())
#===============================================================================
source("0. Nomina/Codigo por Partes/1. Cargar la Base.R")
source("0. Nomina/Codigo por Partes/2. Nombre del Archivo Base.R")
source("0. Nomina/Codigo por Partes/3. Agregar y Eliminar la Base.R")
source("0. Nomina/Codigo por Partes/4. Clasificacion Tipo de Servicio.R")
source("0. Nomina/Codigo por Partes/5. Manejo Partícipes.R")
source("0. Nomina/Codigo por Partes/6. Costos de transacción.R")
source("0. Nomina/Codigo por Partes/7. Participación Producto.R")
source("0. Nomina/Codigo por Partes/8. Generar la Base de Color.R")
source("0. Nomina/Codigo por Partes/9. Completar Base con Color.R")
View(Data_Color_unique)
source("0. Nomina/Codigo por Partes/10. Porcentaje de los Profesionales.R")
source("0. Nomina/Codigo por Partes/11. Participación Salón.R")
source("0. Nomina/Codigo por Partes/12. Generar la Base de Descuentos.R")
source("0. Nomina/Codigo por Partes/13. Descuento Ajuste Producto.R")
source("0. Nomina/Codigo por Partes/14. Descuentos Varios a Profesionales.R")
source("0. Nomina/Codigo por Partes/15. Exportar Resultados.R")
rm(yellow_row_style)
# Data
Data$Precio <- ifelse(Data$Modificado == 1, 0,Data$Precio)
Data <- Data %>% select(-Modificado)
# Exportar Data del Consolidado
write_xlsx(Data, file.path("3. Resultados", nombre_carpeta, "0. Consolidado.xlsx"))
# Crear el reporte agrupando por trabajador y sumando la variable "Part_profesional"
reporte <- Data %>%
group_by(`Prestador/Vendedor`) %>%
summarise(Total_a_pagar = sum(Part_profesional, na.rm = TRUE)) %>%
arrange(desc(Total_a_pagar)) # Ordenar por el total a pagar de mayor a menor
# Calcula el total de la nomina
total_nomina <- sum(Data$Part_profesional, na.rm = TRUE)
# Imprimir el reporte en la consola
cat("Reporte de Nómina\n")
cat("=================\n")
for (i in 1:nrow(reporte)) {
cat(
paste0(
"- ", reporte$`Prestador/Vendedor`[i],
": Se le debe pagar ",
formatC(reporte$Total_a_pagar[i], format = "f", big.mark = ",", digits = 2), "\n"
)
)
}
cat("=================\n")
cat(paste0("En total de nómina se deben pagar: ",
formatC(total_nomina, format = "f", big.mark = ",", digits = 2), "\n"))
